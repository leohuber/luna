[project]
name = "luna_chat"
version = "0.1.0"
description = "A Creative Assistant."
authors = [
    { name = "Leo Huber", email = "leo_huber@icloud.com" }
]
dependencies = [
    "textual[syntax]==1.0.0",
    "sqlmodel>=0.0.9",
    "humanize>=4.6.0",
    "click>=8.1.6",
    "aiosqlite>=0.20.0",
    "click-default-group>=1.2.4",
    "greenlet>=3.0.3",
    "google-generativeai>=0.5.3",
    "pyperclip>=1.8.2",
    "litellm>=1.55.3",
    "pydantic>=2.9.0",
    "langchain>=0.3",
    "langchain-core>=0.3",
    "langchain-text-splitters>=0.3",
    "langchain-community>=0.3",
    "langchain-openai>=0.2",
    "jinja2>=3.1.5",
    "pedalboard>=0.9.16",
    "noisereduce>=3.0.3"
]
readme = "README.md"
requires-python = ">= 3.12"

[project.scripts]
luna = "luna_chat.__main__:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "INP001"
]

[tool.uv]
managed = true
dev-dependencies = [
    "mypy>=1.15.0",
    "types-peewee>=3.16.0.0",
    "pre-commit>=4.0.1",
    "textual-dev>=1.7.0",
    "pyinstrument>=5.0.0",
    "ruff>=0.9.9",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "pytest>=8.3.5"
]

[tool.mypy]
ignore_missing_imports = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["luna_chat"]
exclude = [
  "/.github",
  "/test",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
norecursedirs = "tests/test_utils"
testpaths = [
    "tests",
    "integration",
]